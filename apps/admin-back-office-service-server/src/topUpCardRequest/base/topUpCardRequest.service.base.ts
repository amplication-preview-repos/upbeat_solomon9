/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  TopUpCardRequest as PrismaTopUpCardRequest,
} from "@prisma/client";

export class TopUpCardRequestServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TopUpCardRequestCountArgs, "select">
  ): Promise<number> {
    return this.prisma.topUpCardRequest.count(args);
  }

  async topUpCardRequests(
    args: Prisma.TopUpCardRequestFindManyArgs
  ): Promise<PrismaTopUpCardRequest[]> {
    return this.prisma.topUpCardRequest.findMany(args);
  }
  async topUpCardRequest(
    args: Prisma.TopUpCardRequestFindUniqueArgs
  ): Promise<PrismaTopUpCardRequest | null> {
    return this.prisma.topUpCardRequest.findUnique(args);
  }
  async createTopUpCardRequest(
    args: Prisma.TopUpCardRequestCreateArgs
  ): Promise<PrismaTopUpCardRequest> {
    return this.prisma.topUpCardRequest.create(args);
  }
  async updateTopUpCardRequest(
    args: Prisma.TopUpCardRequestUpdateArgs
  ): Promise<PrismaTopUpCardRequest> {
    return this.prisma.topUpCardRequest.update(args);
  }
  async deleteTopUpCardRequest(
    args: Prisma.TopUpCardRequestDeleteArgs
  ): Promise<PrismaTopUpCardRequest> {
    return this.prisma.topUpCardRequest.delete(args);
  }
}
